{
  "SchemaVersion": 2,
  "ArtifactName": "/home/kali/Desktop/SharedFiles/terrakube-3.10.1.tgz",
  "ArtifactType": "filesystem",
  "Metadata": {
    "ImageConfig": {
      "architecture": "",
      "created": "0001-01-01T00:00:00Z",
      "os": "",
      "rootfs": {
        "type": "",
        "diff_ids": null
      },
      "config": {}
    }
  },
  "Results": [
    {
      "Target": "terrakube-3.10.1.tgz:charts/dex/templates/deployment.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 138,
        "Failures": 14,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV001",
          "AVDID": "AVD-KSV-0001",
          "Title": "Can elevate its own privileges",
          "Description": "A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.",
          "Message": "Container 'dex' of Deployment 'terrakube-dex' should set 'securityContext.allowPrivilegeEscalation' to false",
          "Namespace": "builtin.kubernetes.KSV001",
          "Query": "data.builtin.kubernetes.KSV001.deny",
          "Resolution": "Set 'set containers[].securityContext.allowPrivilegeEscalation' to 'false'.",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv001",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv001"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 31,
            "EndLine": 65,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV003",
          "AVDID": "AVD-KSV-0003",
          "Title": "Default capabilities: some containers do not drop all",
          "Description": "The container should drop all default capabilities and add only those that are needed for its execution.",
          "Message": "Container 'dex' of Deployment 'terrakube-dex' should add 'ALL' to 'securityContext.capabilities.drop'",
          "Namespace": "builtin.kubernetes.KSV003",
          "Query": "data.builtin.kubernetes.KSV003.deny",
          "Resolution": "Add 'ALL' to containers[].securityContext.capabilities.drop.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv003",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-capabilities-drop-index-all/",
            "https://avd.aquasec.com/misconfig/ksv003"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 31,
            "EndLine": 65,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV011",
          "AVDID": "AVD-KSV-0011",
          "Title": "CPU not limited",
          "Description": "Enforcing CPU limits prevents DoS via resource exhaustion.",
          "Message": "Container 'dex' of Deployment 'terrakube-dex' should set 'resources.limits.cpu'",
          "Namespace": "builtin.kubernetes.KSV011",
          "Query": "data.builtin.kubernetes.KSV011.deny",
          "Resolution": "Set a limit value under 'containers[].resources.limits.cpu'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv011",
          "References": [
            "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
            "https://avd.aquasec.com/misconfig/ksv011"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 31,
            "EndLine": 65,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV012",
          "AVDID": "AVD-KSV-0012",
          "Title": "Runs as root user",
          "Description": "Force the running image to run as a non-root user to ensure least privileges.",
          "Message": "Container 'dex' of Deployment 'terrakube-dex' should set 'securityContext.runAsNonRoot' to true",
          "Namespace": "builtin.kubernetes.KSV012",
          "Query": "data.builtin.kubernetes.KSV012.deny",
          "Resolution": "Set 'containers[].securityContext.runAsNonRoot' to true.",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv012",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv012"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 31,
            "EndLine": 65,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV014",
          "AVDID": "AVD-KSV-0014",
          "Title": "Root file system is not read-only",
          "Description": "An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.",
          "Message": "Container 'dex' of Deployment 'terrakube-dex' should set 'securityContext.readOnlyRootFilesystem' to true",
          "Namespace": "builtin.kubernetes.KSV014",
          "Query": "data.builtin.kubernetes.KSV014.deny",
          "Resolution": "Change 'containers[].securityContext.readOnlyRootFilesystem' to 'true'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv014",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-readonlyrootfilesystem-true/",
            "https://avd.aquasec.com/misconfig/ksv014"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 31,
            "EndLine": 65,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV015",
          "AVDID": "AVD-KSV-0015",
          "Title": "CPU requests not specified",
          "Description": "When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
          "Message": "Container 'dex' of Deployment 'terrakube-dex' should set 'resources.requests.cpu'",
          "Namespace": "builtin.kubernetes.KSV015",
          "Query": "data.builtin.kubernetes.KSV015.deny",
          "Resolution": "Set 'containers[].resources.requests.cpu'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv015",
          "References": [
            "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
            "https://avd.aquasec.com/misconfig/ksv015"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 31,
            "EndLine": 65,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV016",
          "AVDID": "AVD-KSV-0016",
          "Title": "Memory requests not specified",
          "Description": "When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
          "Message": "Container 'dex' of Deployment 'terrakube-dex' should set 'resources.requests.memory'",
          "Namespace": "builtin.kubernetes.KSV016",
          "Query": "data.builtin.kubernetes.KSV016.deny",
          "Resolution": "Set 'containers[].resources.requests.memory'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv016",
          "References": [
            "https://kubesec.io/basics/containers-resources-limits-memory/",
            "https://avd.aquasec.com/misconfig/ksv016"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 31,
            "EndLine": 65,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV018",
          "AVDID": "AVD-KSV-0018",
          "Title": "Memory not limited",
          "Description": "Enforcing memory limits prevents DoS via resource exhaustion.",
          "Message": "Container 'dex' of Deployment 'terrakube-dex' should set 'resources.limits.memory'",
          "Namespace": "builtin.kubernetes.KSV018",
          "Query": "data.builtin.kubernetes.KSV018.deny",
          "Resolution": "Set a limit value under 'containers[].resources.limits.memory'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv018",
          "References": [
            "https://kubesec.io/basics/containers-resources-limits-memory/",
            "https://avd.aquasec.com/misconfig/ksv018"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 31,
            "EndLine": 65,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV020",
          "AVDID": "AVD-KSV-0020",
          "Title": "Runs with UID \u003c= 10000",
          "Description": "Force the container to run with user ID \u003e 10000 to avoid conflicts with the host’s user table.",
          "Message": "Container 'dex' of Deployment 'terrakube-dex' should set 'securityContext.runAsUser' \u003e 10000",
          "Namespace": "builtin.kubernetes.KSV020",
          "Query": "data.builtin.kubernetes.KSV020.deny",
          "Resolution": "Set 'containers[].securityContext.runAsUser' to an integer \u003e 10000.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv020",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv020"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 31,
            "EndLine": 65,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV021",
          "AVDID": "AVD-KSV-0021",
          "Title": "Runs with GID \u003c= 10000",
          "Description": "Force the container to run with group ID \u003e 10000 to avoid conflicts with the host’s user table.",
          "Message": "Container 'dex' of Deployment 'terrakube-dex' should set 'securityContext.runAsGroup' \u003e 10000",
          "Namespace": "builtin.kubernetes.KSV021",
          "Query": "data.builtin.kubernetes.KSV021.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to an integer \u003e 10000.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv021",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv021"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 31,
            "EndLine": 65,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV030",
          "AVDID": "AVD-KSV-0030",
          "Title": "Runtime/Default Seccomp profile not set",
          "Description": "According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.",
          "Message": "Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'",
          "Namespace": "builtin.kubernetes.KSV030",
          "Query": "data.builtin.kubernetes.KSV030.deny",
          "Resolution": "Set 'spec.securityContext.seccompProfile.type', 'spec.containers[*].securityContext.seccompProfile' and 'spec.initContainers[*].securityContext.seccompProfile' to 'RuntimeDefault' or undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv030",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv030"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 31,
            "EndLine": 65,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV104",
          "AVDID": "AVD-KSV-0104",
          "Title": "Seccomp policies disabled",
          "Description": "A program inside the container can bypass Seccomp protection policies.",
          "Message": "container dex of deployment terrakube-dex in default namespace should specify a seccomp profile",
          "Namespace": "builtin.kubernetes.KSV104",
          "Query": "data.builtin.kubernetes.KSV104.deny",
          "Resolution": "Specify seccomp either by annotation or by seccomp profile type having allowed values as per pod security standards",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv104",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
            "https://avd.aquasec.com/misconfig/ksv104"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV106",
          "AVDID": "AVD-KSV-0106",
          "Title": "Container capabilities must only include NET_BIND_SERVICE",
          "Description": "Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.",
          "Message": "container should drop all",
          "Namespace": "builtin.kubernetes.KSV106",
          "Query": "data.builtin.kubernetes.KSV106.deny",
          "Resolution": "Set 'spec.containers[*].securityContext.capabilities.drop' to 'ALL' and only add 'NET_BIND_SERVICE' to 'spec.containers[*].securityContext.capabilities.add'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv106",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv106"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 31,
            "EndLine": 65,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "deployment terrakube-dex in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:charts/dex/templates/rbac.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 5,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV112",
          "AVDID": "AVD-KSV-0112",
          "Title": "Manage all resources at the namespace",
          "Description": "Full control of the resources within a namespace.  In some cluster configurations, this is excessive. In others, this is normal (a gitops deployment operator like flux)",
          "Message": "Role 'terrakube-dex' shouldn't manage all resources at the namespace 'default'",
          "Namespace": "builtin.kubernetes.KSV112",
          "Query": "data.builtin.kubernetes.KSV112.deny",
          "Resolution": "Remove '*' from 'rules.resources'. Provide specific list of resources to be managed by role in namespace",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv112",
          "References": [
            "https://kubernetes.io/docs/concepts/security/rbac-good-practices/",
            "https://avd.aquasec.com/misconfig/ksv112"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 13,
            "EndLine": 15,
            "Code": {
              "Lines": [
                {
                  "Number": 13,
                  "Content": "      paths:",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 14,
                  "Content": "      - path: \"/\"",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 15,
                  "Content": "        pathType: \"Prefix\"",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "clusterrole terrakube-dex in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "clusterrolebinding terrakube-dex-cluster in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "role terrakube-dex in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "rolebinding terrakube-dex in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:charts/dex/templates/secret.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "secret terrakube-dex in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:charts/dex/templates/service.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "service terrakube-dex in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:charts/dex/templates/serviceaccount.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "serviceaccount terrakube-dex in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:charts/minio/templates/pvc.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "persistentvolumeclaim terrakube-minio in  namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:charts/minio/templates/secrets.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "secret terrakube-minio in  namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:charts/minio/templates/service.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "service terrakube-minio in  namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:charts/minio/templates/serviceaccount.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "serviceaccount terrakube-minio in  namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:charts/minio/templates/standalone/deployment.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 139,
        "Failures": 13,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV001",
          "AVDID": "AVD-KSV-0001",
          "Title": "Can elevate its own privileges",
          "Description": "A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.",
          "Message": "Container 'minio' of Deployment 'terrakube-minio' should set 'securityContext.allowPrivilegeEscalation' to false",
          "Namespace": "builtin.kubernetes.KSV001",
          "Query": "data.builtin.kubernetes.KSV001.deny",
          "Resolution": "Set 'set containers[].securityContext.allowPrivilegeEscalation' to 'false'.",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv001",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv001"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 48,
            "EndLine": 110,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV003",
          "AVDID": "AVD-KSV-0003",
          "Title": "Default capabilities: some containers do not drop all",
          "Description": "The container should drop all default capabilities and add only those that are needed for its execution.",
          "Message": "Container 'minio' of Deployment 'terrakube-minio' should add 'ALL' to 'securityContext.capabilities.drop'",
          "Namespace": "builtin.kubernetes.KSV003",
          "Query": "data.builtin.kubernetes.KSV003.deny",
          "Resolution": "Add 'ALL' to containers[].securityContext.capabilities.drop.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv003",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-capabilities-drop-index-all/",
            "https://avd.aquasec.com/misconfig/ksv003"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 48,
            "EndLine": 110,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV011",
          "AVDID": "AVD-KSV-0011",
          "Title": "CPU not limited",
          "Description": "Enforcing CPU limits prevents DoS via resource exhaustion.",
          "Message": "Container 'minio' of Deployment 'terrakube-minio' should set 'resources.limits.cpu'",
          "Namespace": "builtin.kubernetes.KSV011",
          "Query": "data.builtin.kubernetes.KSV011.deny",
          "Resolution": "Set a limit value under 'containers[].resources.limits.cpu'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv011",
          "References": [
            "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
            "https://avd.aquasec.com/misconfig/ksv011"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 48,
            "EndLine": 110,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV014",
          "AVDID": "AVD-KSV-0014",
          "Title": "Root file system is not read-only",
          "Description": "An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.",
          "Message": "Container 'minio' of Deployment 'terrakube-minio' should set 'securityContext.readOnlyRootFilesystem' to true",
          "Namespace": "builtin.kubernetes.KSV014",
          "Query": "data.builtin.kubernetes.KSV014.deny",
          "Resolution": "Change 'containers[].securityContext.readOnlyRootFilesystem' to 'true'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv014",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-readonlyrootfilesystem-true/",
            "https://avd.aquasec.com/misconfig/ksv014"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 48,
            "EndLine": 110,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV015",
          "AVDID": "AVD-KSV-0015",
          "Title": "CPU requests not specified",
          "Description": "When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
          "Message": "Container 'minio' of Deployment 'terrakube-minio' should set 'resources.requests.cpu'",
          "Namespace": "builtin.kubernetes.KSV015",
          "Query": "data.builtin.kubernetes.KSV015.deny",
          "Resolution": "Set 'containers[].resources.requests.cpu'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv015",
          "References": [
            "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
            "https://avd.aquasec.com/misconfig/ksv015"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 48,
            "EndLine": 110,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV016",
          "AVDID": "AVD-KSV-0016",
          "Title": "Memory requests not specified",
          "Description": "When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
          "Message": "Container 'minio' of Deployment 'terrakube-minio' should set 'resources.requests.memory'",
          "Namespace": "builtin.kubernetes.KSV016",
          "Query": "data.builtin.kubernetes.KSV016.deny",
          "Resolution": "Set 'containers[].resources.requests.memory'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv016",
          "References": [
            "https://kubesec.io/basics/containers-resources-limits-memory/",
            "https://avd.aquasec.com/misconfig/ksv016"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 48,
            "EndLine": 110,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV018",
          "AVDID": "AVD-KSV-0018",
          "Title": "Memory not limited",
          "Description": "Enforcing memory limits prevents DoS via resource exhaustion.",
          "Message": "Container 'minio' of Deployment 'terrakube-minio' should set 'resources.limits.memory'",
          "Namespace": "builtin.kubernetes.KSV018",
          "Query": "data.builtin.kubernetes.KSV018.deny",
          "Resolution": "Set a limit value under 'containers[].resources.limits.memory'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv018",
          "References": [
            "https://kubesec.io/basics/containers-resources-limits-memory/",
            "https://avd.aquasec.com/misconfig/ksv018"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 48,
            "EndLine": 110,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV020",
          "AVDID": "AVD-KSV-0020",
          "Title": "Runs with UID \u003c= 10000",
          "Description": "Force the container to run with user ID \u003e 10000 to avoid conflicts with the host’s user table.",
          "Message": "Container 'minio' of Deployment 'terrakube-minio' should set 'securityContext.runAsUser' \u003e 10000",
          "Namespace": "builtin.kubernetes.KSV020",
          "Query": "data.builtin.kubernetes.KSV020.deny",
          "Resolution": "Set 'containers[].securityContext.runAsUser' to an integer \u003e 10000.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv020",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv020"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 48,
            "EndLine": 110,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV021",
          "AVDID": "AVD-KSV-0021",
          "Title": "Runs with GID \u003c= 10000",
          "Description": "Force the container to run with group ID \u003e 10000 to avoid conflicts with the host’s user table.",
          "Message": "Container 'minio' of Deployment 'terrakube-minio' should set 'securityContext.runAsGroup' \u003e 10000",
          "Namespace": "builtin.kubernetes.KSV021",
          "Query": "data.builtin.kubernetes.KSV021.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to an integer \u003e 10000.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv021",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv021"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 48,
            "EndLine": 110,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV030",
          "AVDID": "AVD-KSV-0030",
          "Title": "Runtime/Default Seccomp profile not set",
          "Description": "According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.",
          "Message": "Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'",
          "Namespace": "builtin.kubernetes.KSV030",
          "Query": "data.builtin.kubernetes.KSV030.deny",
          "Resolution": "Set 'spec.securityContext.seccompProfile.type', 'spec.containers[*].securityContext.seccompProfile' and 'spec.initContainers[*].securityContext.seccompProfile' to 'RuntimeDefault' or undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv030",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv030"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 48,
            "EndLine": 110,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV104",
          "AVDID": "AVD-KSV-0104",
          "Title": "Seccomp policies disabled",
          "Description": "A program inside the container can bypass Seccomp protection policies.",
          "Message": "container minio of deployment terrakube-minio in  namespace should specify a seccomp profile",
          "Namespace": "builtin.kubernetes.KSV104",
          "Query": "data.builtin.kubernetes.KSV104.deny",
          "Resolution": "Specify seccomp either by annotation or by seccomp profile type having allowed values as per pod security standards",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv104",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
            "https://avd.aquasec.com/misconfig/ksv104"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV106",
          "AVDID": "AVD-KSV-0106",
          "Title": "Container capabilities must only include NET_BIND_SERVICE",
          "Description": "Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.",
          "Message": "container should drop all",
          "Namespace": "builtin.kubernetes.KSV106",
          "Query": "data.builtin.kubernetes.KSV106.deny",
          "Resolution": "Set 'spec.containers[*].securityContext.capabilities.drop' to 'ALL' and only add 'NET_BIND_SERVICE' to 'spec.containers[*].securityContext.capabilities.add'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv106",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv106"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 48,
            "EndLine": 110,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "deployment terrakube-minio in  namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:charts/postgresql/templates/primary/statefulset.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 140,
        "Failures": 12,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV001",
          "AVDID": "AVD-KSV-0001",
          "Title": "Can elevate its own privileges",
          "Description": "A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.",
          "Message": "Container 'postgresql' of StatefulSet 'terrakube-postgresql' should set 'securityContext.allowPrivilegeEscalation' to false",
          "Namespace": "builtin.kubernetes.KSV001",
          "Query": "data.builtin.kubernetes.KSV001.deny",
          "Resolution": "Set 'set containers[].securityContext.allowPrivilegeEscalation' to 'false'.",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv001",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv001"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 56,
            "EndLine": 146,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV003",
          "AVDID": "AVD-KSV-0003",
          "Title": "Default capabilities: some containers do not drop all",
          "Description": "The container should drop all default capabilities and add only those that are needed for its execution.",
          "Message": "Container 'postgresql' of StatefulSet 'terrakube-postgresql' should add 'ALL' to 'securityContext.capabilities.drop'",
          "Namespace": "builtin.kubernetes.KSV003",
          "Query": "data.builtin.kubernetes.KSV003.deny",
          "Resolution": "Add 'ALL' to containers[].securityContext.capabilities.drop.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv003",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-capabilities-drop-index-all/",
            "https://avd.aquasec.com/misconfig/ksv003"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 56,
            "EndLine": 146,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV011",
          "AVDID": "AVD-KSV-0011",
          "Title": "CPU not limited",
          "Description": "Enforcing CPU limits prevents DoS via resource exhaustion.",
          "Message": "Container 'postgresql' of StatefulSet 'terrakube-postgresql' should set 'resources.limits.cpu'",
          "Namespace": "builtin.kubernetes.KSV011",
          "Query": "data.builtin.kubernetes.KSV011.deny",
          "Resolution": "Set a limit value under 'containers[].resources.limits.cpu'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv011",
          "References": [
            "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
            "https://avd.aquasec.com/misconfig/ksv011"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 56,
            "EndLine": 146,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV012",
          "AVDID": "AVD-KSV-0012",
          "Title": "Runs as root user",
          "Description": "Force the running image to run as a non-root user to ensure least privileges.",
          "Message": "Container 'postgresql' of StatefulSet 'terrakube-postgresql' should set 'securityContext.runAsNonRoot' to true",
          "Namespace": "builtin.kubernetes.KSV012",
          "Query": "data.builtin.kubernetes.KSV012.deny",
          "Resolution": "Set 'containers[].securityContext.runAsNonRoot' to true.",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv012",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv012"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 56,
            "EndLine": 146,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV014",
          "AVDID": "AVD-KSV-0014",
          "Title": "Root file system is not read-only",
          "Description": "An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.",
          "Message": "Container 'postgresql' of StatefulSet 'terrakube-postgresql' should set 'securityContext.readOnlyRootFilesystem' to true",
          "Namespace": "builtin.kubernetes.KSV014",
          "Query": "data.builtin.kubernetes.KSV014.deny",
          "Resolution": "Change 'containers[].securityContext.readOnlyRootFilesystem' to 'true'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv014",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-readonlyrootfilesystem-true/",
            "https://avd.aquasec.com/misconfig/ksv014"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 56,
            "EndLine": 146,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV018",
          "AVDID": "AVD-KSV-0018",
          "Title": "Memory not limited",
          "Description": "Enforcing memory limits prevents DoS via resource exhaustion.",
          "Message": "Container 'postgresql' of StatefulSet 'terrakube-postgresql' should set 'resources.limits.memory'",
          "Namespace": "builtin.kubernetes.KSV018",
          "Query": "data.builtin.kubernetes.KSV018.deny",
          "Resolution": "Set a limit value under 'containers[].resources.limits.memory'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv018",
          "References": [
            "https://kubesec.io/basics/containers-resources-limits-memory/",
            "https://avd.aquasec.com/misconfig/ksv018"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 56,
            "EndLine": 146,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV020",
          "AVDID": "AVD-KSV-0020",
          "Title": "Runs with UID \u003c= 10000",
          "Description": "Force the container to run with user ID \u003e 10000 to avoid conflicts with the host’s user table.",
          "Message": "Container 'postgresql' of StatefulSet 'terrakube-postgresql' should set 'securityContext.runAsUser' \u003e 10000",
          "Namespace": "builtin.kubernetes.KSV020",
          "Query": "data.builtin.kubernetes.KSV020.deny",
          "Resolution": "Set 'containers[].securityContext.runAsUser' to an integer \u003e 10000.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv020",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv020"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 56,
            "EndLine": 146,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV021",
          "AVDID": "AVD-KSV-0021",
          "Title": "Runs with GID \u003c= 10000",
          "Description": "Force the container to run with group ID \u003e 10000 to avoid conflicts with the host’s user table.",
          "Message": "Container 'postgresql' of StatefulSet 'terrakube-postgresql' should set 'securityContext.runAsGroup' \u003e 10000",
          "Namespace": "builtin.kubernetes.KSV021",
          "Query": "data.builtin.kubernetes.KSV021.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to an integer \u003e 10000.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv021",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv021"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 56,
            "EndLine": 146,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV030",
          "AVDID": "AVD-KSV-0030",
          "Title": "Runtime/Default Seccomp profile not set",
          "Description": "According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.",
          "Message": "Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'",
          "Namespace": "builtin.kubernetes.KSV030",
          "Query": "data.builtin.kubernetes.KSV030.deny",
          "Resolution": "Set 'spec.securityContext.seccompProfile.type', 'spec.containers[*].securityContext.seccompProfile' and 'spec.initContainers[*].securityContext.seccompProfile' to 'RuntimeDefault' or undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv030",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv030"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 56,
            "EndLine": 146,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV104",
          "AVDID": "AVD-KSV-0104",
          "Title": "Seccomp policies disabled",
          "Description": "A program inside the container can bypass Seccomp protection policies.",
          "Message": "container postgresql of statefulset terrakube-postgresql in  namespace should specify a seccomp profile",
          "Namespace": "builtin.kubernetes.KSV104",
          "Query": "data.builtin.kubernetes.KSV104.deny",
          "Resolution": "Specify seccomp either by annotation or by seccomp profile type having allowed values as per pod security standards",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv104",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
            "https://avd.aquasec.com/misconfig/ksv104"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV106",
          "AVDID": "AVD-KSV-0106",
          "Title": "Container capabilities must only include NET_BIND_SERVICE",
          "Description": "Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.",
          "Message": "container should drop all",
          "Namespace": "builtin.kubernetes.KSV106",
          "Query": "data.builtin.kubernetes.KSV106.deny",
          "Resolution": "Set 'spec.containers[*].securityContext.capabilities.drop' to 'ALL' and only add 'NET_BIND_SERVICE' to 'spec.containers[*].securityContext.capabilities.add'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv106",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv106"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 56,
            "EndLine": 146,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "statefulset terrakube-postgresql in  namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:charts/postgresql/templates/primary/svc-headless.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "service terrakube-postgresql-hl in  namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:charts/postgresql/templates/primary/svc.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "service terrakube-postgresql in  namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:charts/postgresql/templates/secrets.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "secret terrakube-postgresql in  namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:charts/redis/templates/configmap.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "configmap terrakube-redis-configuration in  namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:charts/redis/templates/headless-svc.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "service terrakube-redis-headless in  namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:charts/redis/templates/health-configmap.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 150,
        "Failures": 2,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "AVD-KSV-0109",
          "AVDID": "AVD-KSV-0109",
          "Title": "ConfigMap with secrets",
          "Description": "Storing secrets in configMaps is unsafe",
          "Message": "ConfigMap 'terrakube-redis-health' in '' namespace stores secrets in key(s) or value(s) '{\"[[ -f $REDIS_MASTER_PASSWORD_FILE ]] \u0026\u0026 export REDIS_MASTER_PASSWORD\", \"[[ -f $REDIS_PASSWORD_FILE ]] \u0026\u0026 export REDIS_PASSWORD\"}'",
          "Namespace": "builtin.kubernetes.KSV0109",
          "Query": "data.builtin.kubernetes.KSV0109.deny",
          "Resolution": "Remove password/secret from configMap data value",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-ksv-0109",
          "References": [
            "https://avd.aquasec.com/misconfig/avd-ksv-0109"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "configmap terrakube-redis-health in  namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:charts/redis/templates/master/application.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 138,
        "Failures": 14,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV001",
          "AVDID": "AVD-KSV-0001",
          "Title": "Can elevate its own privileges",
          "Description": "A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.",
          "Message": "Container 'redis' of StatefulSet 'terrakube-redis-master' should set 'securityContext.allowPrivilegeEscalation' to false",
          "Namespace": "builtin.kubernetes.KSV001",
          "Query": "data.builtin.kubernetes.KSV001.deny",
          "Resolution": "Set 'set containers[].securityContext.allowPrivilegeEscalation' to 'false'.",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv001",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv001"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 58,
            "EndLine": 125,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV003",
          "AVDID": "AVD-KSV-0003",
          "Title": "Default capabilities: some containers do not drop all",
          "Description": "The container should drop all default capabilities and add only those that are needed for its execution.",
          "Message": "Container 'redis' of StatefulSet 'terrakube-redis-master' should add 'ALL' to 'securityContext.capabilities.drop'",
          "Namespace": "builtin.kubernetes.KSV003",
          "Query": "data.builtin.kubernetes.KSV003.deny",
          "Resolution": "Add 'ALL' to containers[].securityContext.capabilities.drop.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv003",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-capabilities-drop-index-all/",
            "https://avd.aquasec.com/misconfig/ksv003"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 58,
            "EndLine": 125,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV011",
          "AVDID": "AVD-KSV-0011",
          "Title": "CPU not limited",
          "Description": "Enforcing CPU limits prevents DoS via resource exhaustion.",
          "Message": "Container 'redis' of StatefulSet 'terrakube-redis-master' should set 'resources.limits.cpu'",
          "Namespace": "builtin.kubernetes.KSV011",
          "Query": "data.builtin.kubernetes.KSV011.deny",
          "Resolution": "Set a limit value under 'containers[].resources.limits.cpu'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv011",
          "References": [
            "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
            "https://avd.aquasec.com/misconfig/ksv011"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 58,
            "EndLine": 125,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV012",
          "AVDID": "AVD-KSV-0012",
          "Title": "Runs as root user",
          "Description": "Force the running image to run as a non-root user to ensure least privileges.",
          "Message": "Container 'redis' of StatefulSet 'terrakube-redis-master' should set 'securityContext.runAsNonRoot' to true",
          "Namespace": "builtin.kubernetes.KSV012",
          "Query": "data.builtin.kubernetes.KSV012.deny",
          "Resolution": "Set 'containers[].securityContext.runAsNonRoot' to true.",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv012",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv012"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 58,
            "EndLine": 125,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV014",
          "AVDID": "AVD-KSV-0014",
          "Title": "Root file system is not read-only",
          "Description": "An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.",
          "Message": "Container 'redis' of StatefulSet 'terrakube-redis-master' should set 'securityContext.readOnlyRootFilesystem' to true",
          "Namespace": "builtin.kubernetes.KSV014",
          "Query": "data.builtin.kubernetes.KSV014.deny",
          "Resolution": "Change 'containers[].securityContext.readOnlyRootFilesystem' to 'true'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv014",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-readonlyrootfilesystem-true/",
            "https://avd.aquasec.com/misconfig/ksv014"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 58,
            "EndLine": 125,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV015",
          "AVDID": "AVD-KSV-0015",
          "Title": "CPU requests not specified",
          "Description": "When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
          "Message": "Container 'redis' of StatefulSet 'terrakube-redis-master' should set 'resources.requests.cpu'",
          "Namespace": "builtin.kubernetes.KSV015",
          "Query": "data.builtin.kubernetes.KSV015.deny",
          "Resolution": "Set 'containers[].resources.requests.cpu'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv015",
          "References": [
            "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
            "https://avd.aquasec.com/misconfig/ksv015"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 58,
            "EndLine": 125,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV016",
          "AVDID": "AVD-KSV-0016",
          "Title": "Memory requests not specified",
          "Description": "When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
          "Message": "Container 'redis' of StatefulSet 'terrakube-redis-master' should set 'resources.requests.memory'",
          "Namespace": "builtin.kubernetes.KSV016",
          "Query": "data.builtin.kubernetes.KSV016.deny",
          "Resolution": "Set 'containers[].resources.requests.memory'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv016",
          "References": [
            "https://kubesec.io/basics/containers-resources-limits-memory/",
            "https://avd.aquasec.com/misconfig/ksv016"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 58,
            "EndLine": 125,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV018",
          "AVDID": "AVD-KSV-0018",
          "Title": "Memory not limited",
          "Description": "Enforcing memory limits prevents DoS via resource exhaustion.",
          "Message": "Container 'redis' of StatefulSet 'terrakube-redis-master' should set 'resources.limits.memory'",
          "Namespace": "builtin.kubernetes.KSV018",
          "Query": "data.builtin.kubernetes.KSV018.deny",
          "Resolution": "Set a limit value under 'containers[].resources.limits.memory'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv018",
          "References": [
            "https://kubesec.io/basics/containers-resources-limits-memory/",
            "https://avd.aquasec.com/misconfig/ksv018"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 58,
            "EndLine": 125,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV020",
          "AVDID": "AVD-KSV-0020",
          "Title": "Runs with UID \u003c= 10000",
          "Description": "Force the container to run with user ID \u003e 10000 to avoid conflicts with the host’s user table.",
          "Message": "Container 'redis' of StatefulSet 'terrakube-redis-master' should set 'securityContext.runAsUser' \u003e 10000",
          "Namespace": "builtin.kubernetes.KSV020",
          "Query": "data.builtin.kubernetes.KSV020.deny",
          "Resolution": "Set 'containers[].securityContext.runAsUser' to an integer \u003e 10000.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv020",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv020"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 58,
            "EndLine": 125,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV021",
          "AVDID": "AVD-KSV-0021",
          "Title": "Runs with GID \u003c= 10000",
          "Description": "Force the container to run with group ID \u003e 10000 to avoid conflicts with the host’s user table.",
          "Message": "Container 'redis' of StatefulSet 'terrakube-redis-master' should set 'securityContext.runAsGroup' \u003e 10000",
          "Namespace": "builtin.kubernetes.KSV021",
          "Query": "data.builtin.kubernetes.KSV021.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to an integer \u003e 10000.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv021",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv021"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 58,
            "EndLine": 125,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV030",
          "AVDID": "AVD-KSV-0030",
          "Title": "Runtime/Default Seccomp profile not set",
          "Description": "According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.",
          "Message": "Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'",
          "Namespace": "builtin.kubernetes.KSV030",
          "Query": "data.builtin.kubernetes.KSV030.deny",
          "Resolution": "Set 'spec.securityContext.seccompProfile.type', 'spec.containers[*].securityContext.seccompProfile' and 'spec.initContainers[*].securityContext.seccompProfile' to 'RuntimeDefault' or undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv030",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv030"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 58,
            "EndLine": 125,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV104",
          "AVDID": "AVD-KSV-0104",
          "Title": "Seccomp policies disabled",
          "Description": "A program inside the container can bypass Seccomp protection policies.",
          "Message": "container redis of statefulset terrakube-redis-master in  namespace should specify a seccomp profile",
          "Namespace": "builtin.kubernetes.KSV104",
          "Query": "data.builtin.kubernetes.KSV104.deny",
          "Resolution": "Specify seccomp either by annotation or by seccomp profile type having allowed values as per pod security standards",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv104",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
            "https://avd.aquasec.com/misconfig/ksv104"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV106",
          "AVDID": "AVD-KSV-0106",
          "Title": "Container capabilities must only include NET_BIND_SERVICE",
          "Description": "Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.",
          "Message": "container should drop all",
          "Namespace": "builtin.kubernetes.KSV106",
          "Query": "data.builtin.kubernetes.KSV106.deny",
          "Resolution": "Set 'spec.containers[*].securityContext.capabilities.drop' to 'ALL' and only add 'NET_BIND_SERVICE' to 'spec.containers[*].securityContext.capabilities.add'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv106",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv106"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 58,
            "EndLine": 125,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "statefulset terrakube-redis-master in  namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:charts/redis/templates/master/service.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "service terrakube-redis-master in  namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:charts/redis/templates/scripts-configmap.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 150,
        "Failures": 2,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "AVD-KSV-0109",
          "AVDID": "AVD-KSV-0109",
          "Title": "ConfigMap with secrets",
          "Description": "Storing secrets in configMaps is unsafe",
          "Message": "ConfigMap 'terrakube-redis-scripts' in '' namespace stores secrets in key(s) or value(s) '{\"[[ -f $REDIS_PASSWORD_FILE ]] \u0026\u0026 export REDIS_PASSWORD\"}'",
          "Namespace": "builtin.kubernetes.KSV0109",
          "Query": "data.builtin.kubernetes.KSV0109.deny",
          "Resolution": "Remove password/secret from configMap data value",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-ksv-0109",
          "References": [
            "https://avd.aquasec.com/misconfig/avd-ksv-0109"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "configmap terrakube-redis-scripts in  namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:charts/redis/templates/secret.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "secret terrakube-redis in  namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:charts/redis/templates/serviceaccount.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "serviceaccount terrakube-redis in  namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:templates/configMap-files.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "configmap terrakube-other-files in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:templates/deployment-api.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 138,
        "Failures": 14,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV001",
          "AVDID": "AVD-KSV-0001",
          "Title": "Can elevate its own privileges",
          "Description": "A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.",
          "Message": "Container 'terrakube-api' of Deployment 'terrakube-api' should set 'securityContext.allowPrivilegeEscalation' to false",
          "Namespace": "builtin.kubernetes.KSV001",
          "Query": "data.builtin.kubernetes.KSV001.deny",
          "Resolution": "Set 'set containers[].securityContext.allowPrivilegeEscalation' to 'false'.",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv001",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv001"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV003",
          "AVDID": "AVD-KSV-0003",
          "Title": "Default capabilities: some containers do not drop all",
          "Description": "The container should drop all default capabilities and add only those that are needed for its execution.",
          "Message": "Container 'terrakube-api' of Deployment 'terrakube-api' should add 'ALL' to 'securityContext.capabilities.drop'",
          "Namespace": "builtin.kubernetes.KSV003",
          "Query": "data.builtin.kubernetes.KSV003.deny",
          "Resolution": "Add 'ALL' to containers[].securityContext.capabilities.drop.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv003",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-capabilities-drop-index-all/",
            "https://avd.aquasec.com/misconfig/ksv003"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV011",
          "AVDID": "AVD-KSV-0011",
          "Title": "CPU not limited",
          "Description": "Enforcing CPU limits prevents DoS via resource exhaustion.",
          "Message": "Container 'terrakube-api' of Deployment 'terrakube-api' should set 'resources.limits.cpu'",
          "Namespace": "builtin.kubernetes.KSV011",
          "Query": "data.builtin.kubernetes.KSV011.deny",
          "Resolution": "Set a limit value under 'containers[].resources.limits.cpu'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv011",
          "References": [
            "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
            "https://avd.aquasec.com/misconfig/ksv011"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV012",
          "AVDID": "AVD-KSV-0012",
          "Title": "Runs as root user",
          "Description": "Force the running image to run as a non-root user to ensure least privileges.",
          "Message": "Container 'terrakube-api' of Deployment 'terrakube-api' should set 'securityContext.runAsNonRoot' to true",
          "Namespace": "builtin.kubernetes.KSV012",
          "Query": "data.builtin.kubernetes.KSV012.deny",
          "Resolution": "Set 'containers[].securityContext.runAsNonRoot' to true.",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv012",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv012"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV014",
          "AVDID": "AVD-KSV-0014",
          "Title": "Root file system is not read-only",
          "Description": "An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.",
          "Message": "Container 'terrakube-api' of Deployment 'terrakube-api' should set 'securityContext.readOnlyRootFilesystem' to true",
          "Namespace": "builtin.kubernetes.KSV014",
          "Query": "data.builtin.kubernetes.KSV014.deny",
          "Resolution": "Change 'containers[].securityContext.readOnlyRootFilesystem' to 'true'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv014",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-readonlyrootfilesystem-true/",
            "https://avd.aquasec.com/misconfig/ksv014"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV015",
          "AVDID": "AVD-KSV-0015",
          "Title": "CPU requests not specified",
          "Description": "When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
          "Message": "Container 'terrakube-api' of Deployment 'terrakube-api' should set 'resources.requests.cpu'",
          "Namespace": "builtin.kubernetes.KSV015",
          "Query": "data.builtin.kubernetes.KSV015.deny",
          "Resolution": "Set 'containers[].resources.requests.cpu'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv015",
          "References": [
            "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
            "https://avd.aquasec.com/misconfig/ksv015"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV016",
          "AVDID": "AVD-KSV-0016",
          "Title": "Memory requests not specified",
          "Description": "When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
          "Message": "Container 'terrakube-api' of Deployment 'terrakube-api' should set 'resources.requests.memory'",
          "Namespace": "builtin.kubernetes.KSV016",
          "Query": "data.builtin.kubernetes.KSV016.deny",
          "Resolution": "Set 'containers[].resources.requests.memory'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv016",
          "References": [
            "https://kubesec.io/basics/containers-resources-limits-memory/",
            "https://avd.aquasec.com/misconfig/ksv016"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV018",
          "AVDID": "AVD-KSV-0018",
          "Title": "Memory not limited",
          "Description": "Enforcing memory limits prevents DoS via resource exhaustion.",
          "Message": "Container 'terrakube-api' of Deployment 'terrakube-api' should set 'resources.limits.memory'",
          "Namespace": "builtin.kubernetes.KSV018",
          "Query": "data.builtin.kubernetes.KSV018.deny",
          "Resolution": "Set a limit value under 'containers[].resources.limits.memory'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv018",
          "References": [
            "https://kubesec.io/basics/containers-resources-limits-memory/",
            "https://avd.aquasec.com/misconfig/ksv018"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV020",
          "AVDID": "AVD-KSV-0020",
          "Title": "Runs with UID \u003c= 10000",
          "Description": "Force the container to run with user ID \u003e 10000 to avoid conflicts with the host’s user table.",
          "Message": "Container 'terrakube-api' of Deployment 'terrakube-api' should set 'securityContext.runAsUser' \u003e 10000",
          "Namespace": "builtin.kubernetes.KSV020",
          "Query": "data.builtin.kubernetes.KSV020.deny",
          "Resolution": "Set 'containers[].securityContext.runAsUser' to an integer \u003e 10000.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv020",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv020"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV021",
          "AVDID": "AVD-KSV-0021",
          "Title": "Runs with GID \u003c= 10000",
          "Description": "Force the container to run with group ID \u003e 10000 to avoid conflicts with the host’s user table.",
          "Message": "Container 'terrakube-api' of Deployment 'terrakube-api' should set 'securityContext.runAsGroup' \u003e 10000",
          "Namespace": "builtin.kubernetes.KSV021",
          "Query": "data.builtin.kubernetes.KSV021.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to an integer \u003e 10000.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv021",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv021"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV030",
          "AVDID": "AVD-KSV-0030",
          "Title": "Runtime/Default Seccomp profile not set",
          "Description": "According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.",
          "Message": "Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'",
          "Namespace": "builtin.kubernetes.KSV030",
          "Query": "data.builtin.kubernetes.KSV030.deny",
          "Resolution": "Set 'spec.securityContext.seccompProfile.type', 'spec.containers[*].securityContext.seccompProfile' and 'spec.initContainers[*].securityContext.seccompProfile' to 'RuntimeDefault' or undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv030",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv030"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV104",
          "AVDID": "AVD-KSV-0104",
          "Title": "Seccomp policies disabled",
          "Description": "A program inside the container can bypass Seccomp protection policies.",
          "Message": "container terrakube-api of deployment terrakube-api in default namespace should specify a seccomp profile",
          "Namespace": "builtin.kubernetes.KSV104",
          "Query": "data.builtin.kubernetes.KSV104.deny",
          "Resolution": "Specify seccomp either by annotation or by seccomp profile type having allowed values as per pod security standards",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv104",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
            "https://avd.aquasec.com/misconfig/ksv104"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV106",
          "AVDID": "AVD-KSV-0106",
          "Title": "Container capabilities must only include NET_BIND_SERVICE",
          "Description": "Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.",
          "Message": "container should drop all",
          "Namespace": "builtin.kubernetes.KSV106",
          "Query": "data.builtin.kubernetes.KSV106.deny",
          "Resolution": "Set 'spec.containers[*].securityContext.capabilities.drop' to 'ALL' and only add 'NET_BIND_SERVICE' to 'spec.containers[*].securityContext.capabilities.add'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv106",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv106"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "deployment terrakube-api in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:templates/deployment-executor.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 138,
        "Failures": 14,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV001",
          "AVDID": "AVD-KSV-0001",
          "Title": "Can elevate its own privileges",
          "Description": "A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.",
          "Message": "Container 'terrakube-executor' of Deployment 'terrakube-executor' should set 'securityContext.allowPrivilegeEscalation' to false",
          "Namespace": "builtin.kubernetes.KSV001",
          "Query": "data.builtin.kubernetes.KSV001.deny",
          "Resolution": "Set 'set containers[].securityContext.allowPrivilegeEscalation' to 'false'.",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv001",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv001"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV003",
          "AVDID": "AVD-KSV-0003",
          "Title": "Default capabilities: some containers do not drop all",
          "Description": "The container should drop all default capabilities and add only those that are needed for its execution.",
          "Message": "Container 'terrakube-executor' of Deployment 'terrakube-executor' should add 'ALL' to 'securityContext.capabilities.drop'",
          "Namespace": "builtin.kubernetes.KSV003",
          "Query": "data.builtin.kubernetes.KSV003.deny",
          "Resolution": "Add 'ALL' to containers[].securityContext.capabilities.drop.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv003",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-capabilities-drop-index-all/",
            "https://avd.aquasec.com/misconfig/ksv003"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV011",
          "AVDID": "AVD-KSV-0011",
          "Title": "CPU not limited",
          "Description": "Enforcing CPU limits prevents DoS via resource exhaustion.",
          "Message": "Container 'terrakube-executor' of Deployment 'terrakube-executor' should set 'resources.limits.cpu'",
          "Namespace": "builtin.kubernetes.KSV011",
          "Query": "data.builtin.kubernetes.KSV011.deny",
          "Resolution": "Set a limit value under 'containers[].resources.limits.cpu'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv011",
          "References": [
            "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
            "https://avd.aquasec.com/misconfig/ksv011"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV012",
          "AVDID": "AVD-KSV-0012",
          "Title": "Runs as root user",
          "Description": "Force the running image to run as a non-root user to ensure least privileges.",
          "Message": "Container 'terrakube-executor' of Deployment 'terrakube-executor' should set 'securityContext.runAsNonRoot' to true",
          "Namespace": "builtin.kubernetes.KSV012",
          "Query": "data.builtin.kubernetes.KSV012.deny",
          "Resolution": "Set 'containers[].securityContext.runAsNonRoot' to true.",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv012",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv012"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV014",
          "AVDID": "AVD-KSV-0014",
          "Title": "Root file system is not read-only",
          "Description": "An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.",
          "Message": "Container 'terrakube-executor' of Deployment 'terrakube-executor' should set 'securityContext.readOnlyRootFilesystem' to true",
          "Namespace": "builtin.kubernetes.KSV014",
          "Query": "data.builtin.kubernetes.KSV014.deny",
          "Resolution": "Change 'containers[].securityContext.readOnlyRootFilesystem' to 'true'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv014",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-readonlyrootfilesystem-true/",
            "https://avd.aquasec.com/misconfig/ksv014"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV015",
          "AVDID": "AVD-KSV-0015",
          "Title": "CPU requests not specified",
          "Description": "When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
          "Message": "Container 'terrakube-executor' of Deployment 'terrakube-executor' should set 'resources.requests.cpu'",
          "Namespace": "builtin.kubernetes.KSV015",
          "Query": "data.builtin.kubernetes.KSV015.deny",
          "Resolution": "Set 'containers[].resources.requests.cpu'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv015",
          "References": [
            "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
            "https://avd.aquasec.com/misconfig/ksv015"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV016",
          "AVDID": "AVD-KSV-0016",
          "Title": "Memory requests not specified",
          "Description": "When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
          "Message": "Container 'terrakube-executor' of Deployment 'terrakube-executor' should set 'resources.requests.memory'",
          "Namespace": "builtin.kubernetes.KSV016",
          "Query": "data.builtin.kubernetes.KSV016.deny",
          "Resolution": "Set 'containers[].resources.requests.memory'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv016",
          "References": [
            "https://kubesec.io/basics/containers-resources-limits-memory/",
            "https://avd.aquasec.com/misconfig/ksv016"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV018",
          "AVDID": "AVD-KSV-0018",
          "Title": "Memory not limited",
          "Description": "Enforcing memory limits prevents DoS via resource exhaustion.",
          "Message": "Container 'terrakube-executor' of Deployment 'terrakube-executor' should set 'resources.limits.memory'",
          "Namespace": "builtin.kubernetes.KSV018",
          "Query": "data.builtin.kubernetes.KSV018.deny",
          "Resolution": "Set a limit value under 'containers[].resources.limits.memory'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv018",
          "References": [
            "https://kubesec.io/basics/containers-resources-limits-memory/",
            "https://avd.aquasec.com/misconfig/ksv018"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV020",
          "AVDID": "AVD-KSV-0020",
          "Title": "Runs with UID \u003c= 10000",
          "Description": "Force the container to run with user ID \u003e 10000 to avoid conflicts with the host’s user table.",
          "Message": "Container 'terrakube-executor' of Deployment 'terrakube-executor' should set 'securityContext.runAsUser' \u003e 10000",
          "Namespace": "builtin.kubernetes.KSV020",
          "Query": "data.builtin.kubernetes.KSV020.deny",
          "Resolution": "Set 'containers[].securityContext.runAsUser' to an integer \u003e 10000.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv020",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv020"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV021",
          "AVDID": "AVD-KSV-0021",
          "Title": "Runs with GID \u003c= 10000",
          "Description": "Force the container to run with group ID \u003e 10000 to avoid conflicts with the host’s user table.",
          "Message": "Container 'terrakube-executor' of Deployment 'terrakube-executor' should set 'securityContext.runAsGroup' \u003e 10000",
          "Namespace": "builtin.kubernetes.KSV021",
          "Query": "data.builtin.kubernetes.KSV021.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to an integer \u003e 10000.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv021",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv021"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV030",
          "AVDID": "AVD-KSV-0030",
          "Title": "Runtime/Default Seccomp profile not set",
          "Description": "According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.",
          "Message": "Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'",
          "Namespace": "builtin.kubernetes.KSV030",
          "Query": "data.builtin.kubernetes.KSV030.deny",
          "Resolution": "Set 'spec.securityContext.seccompProfile.type', 'spec.containers[*].securityContext.seccompProfile' and 'spec.initContainers[*].securityContext.seccompProfile' to 'RuntimeDefault' or undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv030",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv030"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV104",
          "AVDID": "AVD-KSV-0104",
          "Title": "Seccomp policies disabled",
          "Description": "A program inside the container can bypass Seccomp protection policies.",
          "Message": "container terrakube-executor of deployment terrakube-executor in default namespace should specify a seccomp profile",
          "Namespace": "builtin.kubernetes.KSV104",
          "Query": "data.builtin.kubernetes.KSV104.deny",
          "Resolution": "Specify seccomp either by annotation or by seccomp profile type having allowed values as per pod security standards",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv104",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
            "https://avd.aquasec.com/misconfig/ksv104"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV106",
          "AVDID": "AVD-KSV-0106",
          "Title": "Container capabilities must only include NET_BIND_SERVICE",
          "Description": "Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.",
          "Message": "container should drop all",
          "Namespace": "builtin.kubernetes.KSV106",
          "Query": "data.builtin.kubernetes.KSV106.deny",
          "Resolution": "Set 'spec.containers[*].securityContext.capabilities.drop' to 'ALL' and only add 'NET_BIND_SERVICE' to 'spec.containers[*].securityContext.capabilities.add'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv106",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv106"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "deployment terrakube-executor in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:templates/deployment-openldap.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 138,
        "Failures": 14,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV001",
          "AVDID": "AVD-KSV-0001",
          "Title": "Can elevate its own privileges",
          "Description": "A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.",
          "Message": "Container 'terrakube-openldap' of Deployment 'terrakube-openldap' should set 'securityContext.allowPrivilegeEscalation' to false",
          "Namespace": "builtin.kubernetes.KSV001",
          "Query": "data.builtin.kubernetes.KSV001.deny",
          "Resolution": "Set 'set containers[].securityContext.allowPrivilegeEscalation' to 'false'.",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv001",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv001"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 38,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV003",
          "AVDID": "AVD-KSV-0003",
          "Title": "Default capabilities: some containers do not drop all",
          "Description": "The container should drop all default capabilities and add only those that are needed for its execution.",
          "Message": "Container 'terrakube-openldap' of Deployment 'terrakube-openldap' should add 'ALL' to 'securityContext.capabilities.drop'",
          "Namespace": "builtin.kubernetes.KSV003",
          "Query": "data.builtin.kubernetes.KSV003.deny",
          "Resolution": "Add 'ALL' to containers[].securityContext.capabilities.drop.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv003",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-capabilities-drop-index-all/",
            "https://avd.aquasec.com/misconfig/ksv003"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 38,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV011",
          "AVDID": "AVD-KSV-0011",
          "Title": "CPU not limited",
          "Description": "Enforcing CPU limits prevents DoS via resource exhaustion.",
          "Message": "Container 'terrakube-openldap' of Deployment 'terrakube-openldap' should set 'resources.limits.cpu'",
          "Namespace": "builtin.kubernetes.KSV011",
          "Query": "data.builtin.kubernetes.KSV011.deny",
          "Resolution": "Set a limit value under 'containers[].resources.limits.cpu'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv011",
          "References": [
            "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
            "https://avd.aquasec.com/misconfig/ksv011"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 38,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV012",
          "AVDID": "AVD-KSV-0012",
          "Title": "Runs as root user",
          "Description": "Force the running image to run as a non-root user to ensure least privileges.",
          "Message": "Container 'terrakube-openldap' of Deployment 'terrakube-openldap' should set 'securityContext.runAsNonRoot' to true",
          "Namespace": "builtin.kubernetes.KSV012",
          "Query": "data.builtin.kubernetes.KSV012.deny",
          "Resolution": "Set 'containers[].securityContext.runAsNonRoot' to true.",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv012",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv012"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 38,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV014",
          "AVDID": "AVD-KSV-0014",
          "Title": "Root file system is not read-only",
          "Description": "An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.",
          "Message": "Container 'terrakube-openldap' of Deployment 'terrakube-openldap' should set 'securityContext.readOnlyRootFilesystem' to true",
          "Namespace": "builtin.kubernetes.KSV014",
          "Query": "data.builtin.kubernetes.KSV014.deny",
          "Resolution": "Change 'containers[].securityContext.readOnlyRootFilesystem' to 'true'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv014",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-readonlyrootfilesystem-true/",
            "https://avd.aquasec.com/misconfig/ksv014"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 38,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV015",
          "AVDID": "AVD-KSV-0015",
          "Title": "CPU requests not specified",
          "Description": "When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
          "Message": "Container 'terrakube-openldap' of Deployment 'terrakube-openldap' should set 'resources.requests.cpu'",
          "Namespace": "builtin.kubernetes.KSV015",
          "Query": "data.builtin.kubernetes.KSV015.deny",
          "Resolution": "Set 'containers[].resources.requests.cpu'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv015",
          "References": [
            "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
            "https://avd.aquasec.com/misconfig/ksv015"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 38,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV016",
          "AVDID": "AVD-KSV-0016",
          "Title": "Memory requests not specified",
          "Description": "When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
          "Message": "Container 'terrakube-openldap' of Deployment 'terrakube-openldap' should set 'resources.requests.memory'",
          "Namespace": "builtin.kubernetes.KSV016",
          "Query": "data.builtin.kubernetes.KSV016.deny",
          "Resolution": "Set 'containers[].resources.requests.memory'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv016",
          "References": [
            "https://kubesec.io/basics/containers-resources-limits-memory/",
            "https://avd.aquasec.com/misconfig/ksv016"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 38,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV018",
          "AVDID": "AVD-KSV-0018",
          "Title": "Memory not limited",
          "Description": "Enforcing memory limits prevents DoS via resource exhaustion.",
          "Message": "Container 'terrakube-openldap' of Deployment 'terrakube-openldap' should set 'resources.limits.memory'",
          "Namespace": "builtin.kubernetes.KSV018",
          "Query": "data.builtin.kubernetes.KSV018.deny",
          "Resolution": "Set a limit value under 'containers[].resources.limits.memory'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv018",
          "References": [
            "https://kubesec.io/basics/containers-resources-limits-memory/",
            "https://avd.aquasec.com/misconfig/ksv018"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 38,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV020",
          "AVDID": "AVD-KSV-0020",
          "Title": "Runs with UID \u003c= 10000",
          "Description": "Force the container to run with user ID \u003e 10000 to avoid conflicts with the host’s user table.",
          "Message": "Container 'terrakube-openldap' of Deployment 'terrakube-openldap' should set 'securityContext.runAsUser' \u003e 10000",
          "Namespace": "builtin.kubernetes.KSV020",
          "Query": "data.builtin.kubernetes.KSV020.deny",
          "Resolution": "Set 'containers[].securityContext.runAsUser' to an integer \u003e 10000.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv020",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv020"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 38,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV021",
          "AVDID": "AVD-KSV-0021",
          "Title": "Runs with GID \u003c= 10000",
          "Description": "Force the container to run with group ID \u003e 10000 to avoid conflicts with the host’s user table.",
          "Message": "Container 'terrakube-openldap' of Deployment 'terrakube-openldap' should set 'securityContext.runAsGroup' \u003e 10000",
          "Namespace": "builtin.kubernetes.KSV021",
          "Query": "data.builtin.kubernetes.KSV021.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to an integer \u003e 10000.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv021",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv021"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 38,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV030",
          "AVDID": "AVD-KSV-0030",
          "Title": "Runtime/Default Seccomp profile not set",
          "Description": "According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.",
          "Message": "Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'",
          "Namespace": "builtin.kubernetes.KSV030",
          "Query": "data.builtin.kubernetes.KSV030.deny",
          "Resolution": "Set 'spec.securityContext.seccompProfile.type', 'spec.containers[*].securityContext.seccompProfile' and 'spec.initContainers[*].securityContext.seccompProfile' to 'RuntimeDefault' or undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv030",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv030"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 38,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV104",
          "AVDID": "AVD-KSV-0104",
          "Title": "Seccomp policies disabled",
          "Description": "A program inside the container can bypass Seccomp protection policies.",
          "Message": "container terrakube-openldap of deployment terrakube-openldap in default namespace should specify a seccomp profile",
          "Namespace": "builtin.kubernetes.KSV104",
          "Query": "data.builtin.kubernetes.KSV104.deny",
          "Resolution": "Specify seccomp either by annotation or by seccomp profile type having allowed values as per pod security standards",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv104",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
            "https://avd.aquasec.com/misconfig/ksv104"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV106",
          "AVDID": "AVD-KSV-0106",
          "Title": "Container capabilities must only include NET_BIND_SERVICE",
          "Description": "Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.",
          "Message": "container should drop all",
          "Namespace": "builtin.kubernetes.KSV106",
          "Query": "data.builtin.kubernetes.KSV106.deny",
          "Resolution": "Set 'spec.containers[*].securityContext.capabilities.drop' to 'ALL' and only add 'NET_BIND_SERVICE' to 'spec.containers[*].securityContext.capabilities.add'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv106",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv106"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 38,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "deployment terrakube-openldap in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:templates/deployment-registry.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 138,
        "Failures": 14,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV001",
          "AVDID": "AVD-KSV-0001",
          "Title": "Can elevate its own privileges",
          "Description": "A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.",
          "Message": "Container 'terrakube-registry' of Deployment 'terrakube-registry' should set 'securityContext.allowPrivilegeEscalation' to false",
          "Namespace": "builtin.kubernetes.KSV001",
          "Query": "data.builtin.kubernetes.KSV001.deny",
          "Resolution": "Set 'set containers[].securityContext.allowPrivilegeEscalation' to 'false'.",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv001",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv001"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV003",
          "AVDID": "AVD-KSV-0003",
          "Title": "Default capabilities: some containers do not drop all",
          "Description": "The container should drop all default capabilities and add only those that are needed for its execution.",
          "Message": "Container 'terrakube-registry' of Deployment 'terrakube-registry' should add 'ALL' to 'securityContext.capabilities.drop'",
          "Namespace": "builtin.kubernetes.KSV003",
          "Query": "data.builtin.kubernetes.KSV003.deny",
          "Resolution": "Add 'ALL' to containers[].securityContext.capabilities.drop.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv003",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-capabilities-drop-index-all/",
            "https://avd.aquasec.com/misconfig/ksv003"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV011",
          "AVDID": "AVD-KSV-0011",
          "Title": "CPU not limited",
          "Description": "Enforcing CPU limits prevents DoS via resource exhaustion.",
          "Message": "Container 'terrakube-registry' of Deployment 'terrakube-registry' should set 'resources.limits.cpu'",
          "Namespace": "builtin.kubernetes.KSV011",
          "Query": "data.builtin.kubernetes.KSV011.deny",
          "Resolution": "Set a limit value under 'containers[].resources.limits.cpu'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv011",
          "References": [
            "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
            "https://avd.aquasec.com/misconfig/ksv011"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV012",
          "AVDID": "AVD-KSV-0012",
          "Title": "Runs as root user",
          "Description": "Force the running image to run as a non-root user to ensure least privileges.",
          "Message": "Container 'terrakube-registry' of Deployment 'terrakube-registry' should set 'securityContext.runAsNonRoot' to true",
          "Namespace": "builtin.kubernetes.KSV012",
          "Query": "data.builtin.kubernetes.KSV012.deny",
          "Resolution": "Set 'containers[].securityContext.runAsNonRoot' to true.",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv012",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv012"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV014",
          "AVDID": "AVD-KSV-0014",
          "Title": "Root file system is not read-only",
          "Description": "An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.",
          "Message": "Container 'terrakube-registry' of Deployment 'terrakube-registry' should set 'securityContext.readOnlyRootFilesystem' to true",
          "Namespace": "builtin.kubernetes.KSV014",
          "Query": "data.builtin.kubernetes.KSV014.deny",
          "Resolution": "Change 'containers[].securityContext.readOnlyRootFilesystem' to 'true'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv014",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-readonlyrootfilesystem-true/",
            "https://avd.aquasec.com/misconfig/ksv014"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV015",
          "AVDID": "AVD-KSV-0015",
          "Title": "CPU requests not specified",
          "Description": "When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
          "Message": "Container 'terrakube-registry' of Deployment 'terrakube-registry' should set 'resources.requests.cpu'",
          "Namespace": "builtin.kubernetes.KSV015",
          "Query": "data.builtin.kubernetes.KSV015.deny",
          "Resolution": "Set 'containers[].resources.requests.cpu'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv015",
          "References": [
            "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
            "https://avd.aquasec.com/misconfig/ksv015"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV016",
          "AVDID": "AVD-KSV-0016",
          "Title": "Memory requests not specified",
          "Description": "When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
          "Message": "Container 'terrakube-registry' of Deployment 'terrakube-registry' should set 'resources.requests.memory'",
          "Namespace": "builtin.kubernetes.KSV016",
          "Query": "data.builtin.kubernetes.KSV016.deny",
          "Resolution": "Set 'containers[].resources.requests.memory'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv016",
          "References": [
            "https://kubesec.io/basics/containers-resources-limits-memory/",
            "https://avd.aquasec.com/misconfig/ksv016"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV018",
          "AVDID": "AVD-KSV-0018",
          "Title": "Memory not limited",
          "Description": "Enforcing memory limits prevents DoS via resource exhaustion.",
          "Message": "Container 'terrakube-registry' of Deployment 'terrakube-registry' should set 'resources.limits.memory'",
          "Namespace": "builtin.kubernetes.KSV018",
          "Query": "data.builtin.kubernetes.KSV018.deny",
          "Resolution": "Set a limit value under 'containers[].resources.limits.memory'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv018",
          "References": [
            "https://kubesec.io/basics/containers-resources-limits-memory/",
            "https://avd.aquasec.com/misconfig/ksv018"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV020",
          "AVDID": "AVD-KSV-0020",
          "Title": "Runs with UID \u003c= 10000",
          "Description": "Force the container to run with user ID \u003e 10000 to avoid conflicts with the host’s user table.",
          "Message": "Container 'terrakube-registry' of Deployment 'terrakube-registry' should set 'securityContext.runAsUser' \u003e 10000",
          "Namespace": "builtin.kubernetes.KSV020",
          "Query": "data.builtin.kubernetes.KSV020.deny",
          "Resolution": "Set 'containers[].securityContext.runAsUser' to an integer \u003e 10000.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv020",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv020"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV021",
          "AVDID": "AVD-KSV-0021",
          "Title": "Runs with GID \u003c= 10000",
          "Description": "Force the container to run with group ID \u003e 10000 to avoid conflicts with the host’s user table.",
          "Message": "Container 'terrakube-registry' of Deployment 'terrakube-registry' should set 'securityContext.runAsGroup' \u003e 10000",
          "Namespace": "builtin.kubernetes.KSV021",
          "Query": "data.builtin.kubernetes.KSV021.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to an integer \u003e 10000.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv021",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv021"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV030",
          "AVDID": "AVD-KSV-0030",
          "Title": "Runtime/Default Seccomp profile not set",
          "Description": "According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.",
          "Message": "Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'",
          "Namespace": "builtin.kubernetes.KSV030",
          "Query": "data.builtin.kubernetes.KSV030.deny",
          "Resolution": "Set 'spec.securityContext.seccompProfile.type', 'spec.containers[*].securityContext.seccompProfile' and 'spec.initContainers[*].securityContext.seccompProfile' to 'RuntimeDefault' or undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv030",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv030"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV104",
          "AVDID": "AVD-KSV-0104",
          "Title": "Seccomp policies disabled",
          "Description": "A program inside the container can bypass Seccomp protection policies.",
          "Message": "container terrakube-registry of deployment terrakube-registry in default namespace should specify a seccomp profile",
          "Namespace": "builtin.kubernetes.KSV104",
          "Query": "data.builtin.kubernetes.KSV104.deny",
          "Resolution": "Specify seccomp either by annotation or by seccomp profile type having allowed values as per pod security standards",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv104",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
            "https://avd.aquasec.com/misconfig/ksv104"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV106",
          "AVDID": "AVD-KSV-0106",
          "Title": "Container capabilities must only include NET_BIND_SERVICE",
          "Description": "Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.",
          "Message": "container should drop all",
          "Namespace": "builtin.kubernetes.KSV106",
          "Query": "data.builtin.kubernetes.KSV106.deny",
          "Resolution": "Set 'spec.containers[*].securityContext.capabilities.drop' to 'ALL' and only add 'NET_BIND_SERVICE' to 'spec.containers[*].securityContext.capabilities.add'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv106",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv106"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 46,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "deployment terrakube-registry in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:templates/deployment-ui.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 138,
        "Failures": 14,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV001",
          "AVDID": "AVD-KSV-0001",
          "Title": "Can elevate its own privileges",
          "Description": "A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.",
          "Message": "Container 'terrakube-ui' of Deployment 'terrakube-ui' should set 'securityContext.allowPrivilegeEscalation' to false",
          "Namespace": "builtin.kubernetes.KSV001",
          "Query": "data.builtin.kubernetes.KSV001.deny",
          "Resolution": "Set 'set containers[].securityContext.allowPrivilegeEscalation' to 'false'.",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv001",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv001"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 32,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV003",
          "AVDID": "AVD-KSV-0003",
          "Title": "Default capabilities: some containers do not drop all",
          "Description": "The container should drop all default capabilities and add only those that are needed for its execution.",
          "Message": "Container 'terrakube-ui' of Deployment 'terrakube-ui' should add 'ALL' to 'securityContext.capabilities.drop'",
          "Namespace": "builtin.kubernetes.KSV003",
          "Query": "data.builtin.kubernetes.KSV003.deny",
          "Resolution": "Add 'ALL' to containers[].securityContext.capabilities.drop.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv003",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-capabilities-drop-index-all/",
            "https://avd.aquasec.com/misconfig/ksv003"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 32,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV011",
          "AVDID": "AVD-KSV-0011",
          "Title": "CPU not limited",
          "Description": "Enforcing CPU limits prevents DoS via resource exhaustion.",
          "Message": "Container 'terrakube-ui' of Deployment 'terrakube-ui' should set 'resources.limits.cpu'",
          "Namespace": "builtin.kubernetes.KSV011",
          "Query": "data.builtin.kubernetes.KSV011.deny",
          "Resolution": "Set a limit value under 'containers[].resources.limits.cpu'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv011",
          "References": [
            "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
            "https://avd.aquasec.com/misconfig/ksv011"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 32,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV012",
          "AVDID": "AVD-KSV-0012",
          "Title": "Runs as root user",
          "Description": "Force the running image to run as a non-root user to ensure least privileges.",
          "Message": "Container 'terrakube-ui' of Deployment 'terrakube-ui' should set 'securityContext.runAsNonRoot' to true",
          "Namespace": "builtin.kubernetes.KSV012",
          "Query": "data.builtin.kubernetes.KSV012.deny",
          "Resolution": "Set 'containers[].securityContext.runAsNonRoot' to true.",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv012",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv012"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 32,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV014",
          "AVDID": "AVD-KSV-0014",
          "Title": "Root file system is not read-only",
          "Description": "An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.",
          "Message": "Container 'terrakube-ui' of Deployment 'terrakube-ui' should set 'securityContext.readOnlyRootFilesystem' to true",
          "Namespace": "builtin.kubernetes.KSV014",
          "Query": "data.builtin.kubernetes.KSV014.deny",
          "Resolution": "Change 'containers[].securityContext.readOnlyRootFilesystem' to 'true'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv014",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-readonlyrootfilesystem-true/",
            "https://avd.aquasec.com/misconfig/ksv014"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 32,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV015",
          "AVDID": "AVD-KSV-0015",
          "Title": "CPU requests not specified",
          "Description": "When containers have resource requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
          "Message": "Container 'terrakube-ui' of Deployment 'terrakube-ui' should set 'resources.requests.cpu'",
          "Namespace": "builtin.kubernetes.KSV015",
          "Query": "data.builtin.kubernetes.KSV015.deny",
          "Resolution": "Set 'containers[].resources.requests.cpu'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv015",
          "References": [
            "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
            "https://avd.aquasec.com/misconfig/ksv015"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 32,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV016",
          "AVDID": "AVD-KSV-0016",
          "Title": "Memory requests not specified",
          "Description": "When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
          "Message": "Container 'terrakube-ui' of Deployment 'terrakube-ui' should set 'resources.requests.memory'",
          "Namespace": "builtin.kubernetes.KSV016",
          "Query": "data.builtin.kubernetes.KSV016.deny",
          "Resolution": "Set 'containers[].resources.requests.memory'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv016",
          "References": [
            "https://kubesec.io/basics/containers-resources-limits-memory/",
            "https://avd.aquasec.com/misconfig/ksv016"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 32,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV018",
          "AVDID": "AVD-KSV-0018",
          "Title": "Memory not limited",
          "Description": "Enforcing memory limits prevents DoS via resource exhaustion.",
          "Message": "Container 'terrakube-ui' of Deployment 'terrakube-ui' should set 'resources.limits.memory'",
          "Namespace": "builtin.kubernetes.KSV018",
          "Query": "data.builtin.kubernetes.KSV018.deny",
          "Resolution": "Set a limit value under 'containers[].resources.limits.memory'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv018",
          "References": [
            "https://kubesec.io/basics/containers-resources-limits-memory/",
            "https://avd.aquasec.com/misconfig/ksv018"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 32,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV020",
          "AVDID": "AVD-KSV-0020",
          "Title": "Runs with UID \u003c= 10000",
          "Description": "Force the container to run with user ID \u003e 10000 to avoid conflicts with the host’s user table.",
          "Message": "Container 'terrakube-ui' of Deployment 'terrakube-ui' should set 'securityContext.runAsUser' \u003e 10000",
          "Namespace": "builtin.kubernetes.KSV020",
          "Query": "data.builtin.kubernetes.KSV020.deny",
          "Resolution": "Set 'containers[].securityContext.runAsUser' to an integer \u003e 10000.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv020",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv020"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 32,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV021",
          "AVDID": "AVD-KSV-0021",
          "Title": "Runs with GID \u003c= 10000",
          "Description": "Force the container to run with group ID \u003e 10000 to avoid conflicts with the host’s user table.",
          "Message": "Container 'terrakube-ui' of Deployment 'terrakube-ui' should set 'securityContext.runAsGroup' \u003e 10000",
          "Namespace": "builtin.kubernetes.KSV021",
          "Query": "data.builtin.kubernetes.KSV021.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to an integer \u003e 10000.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv021",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv021"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 32,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV030",
          "AVDID": "AVD-KSV-0030",
          "Title": "Runtime/Default Seccomp profile not set",
          "Description": "According to pod security standard 'Seccomp', the RuntimeDefault seccomp profile must be required, or allow specific additional profiles.",
          "Message": "Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'",
          "Namespace": "builtin.kubernetes.KSV030",
          "Query": "data.builtin.kubernetes.KSV030.deny",
          "Resolution": "Set 'spec.securityContext.seccompProfile.type', 'spec.containers[*].securityContext.seccompProfile' and 'spec.initContainers[*].securityContext.seccompProfile' to 'RuntimeDefault' or undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv030",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv030"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 32,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV104",
          "AVDID": "AVD-KSV-0104",
          "Title": "Seccomp policies disabled",
          "Description": "A program inside the container can bypass Seccomp protection policies.",
          "Message": "container terrakube-ui of deployment terrakube-ui in default namespace should specify a seccomp profile",
          "Namespace": "builtin.kubernetes.KSV104",
          "Query": "data.builtin.kubernetes.KSV104.deny",
          "Resolution": "Specify seccomp either by annotation or by seccomp profile type having allowed values as per pod security standards",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv104",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
            "https://avd.aquasec.com/misconfig/ksv104"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV106",
          "AVDID": "AVD-KSV-0106",
          "Title": "Container capabilities must only include NET_BIND_SERVICE",
          "Description": "Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.",
          "Message": "container should drop all",
          "Namespace": "builtin.kubernetes.KSV106",
          "Query": "data.builtin.kubernetes.KSV106.deny",
          "Resolution": "Set 'spec.containers[*].securityContext.capabilities.drop' to 'ALL' and only add 'NET_BIND_SERVICE' to 'spec.containers[*].securityContext.capabilities.add'.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv106",
          "References": [
            "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
            "https://avd.aquasec.com/misconfig/ksv106"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "StartLine": 21,
            "EndLine": 32,
            "Code": {
              "Lines": null
            }
          }
        },
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "deployment terrakube-ui in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:templates/ingress-api.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "ingress terrakube-api-ingress in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:templates/ingress-registry.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "ingress terrakube-registry-ingress in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:templates/ingress-ui.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "ingress terrakube-ui-ingress in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:templates/secret-dex.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "secret terrakube-dex-secrets in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:templates/secret-openldap.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "secret terrakube-openldap-secrets in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:templates/secrets-api.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "secret terrakube-api-secrets in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:templates/secrets-certs.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "secret terrakube-ca-secrets in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:templates/secrets-executor.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "secret terrakube-executor-secrets in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:templates/secrets-registry.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "secret terrakube-registry-secrets in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:templates/secrets-ui.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "secret terrakube-ui-secrets in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:templates/service-api.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "service terrakube-api-service in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:templates/service-executor.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "service terrakube-executor-service in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:templates/service-openldap.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "service terrakube-openldap-service in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:templates/service-registry.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "service terrakube-registry-service in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    },
    {
      "Target": "terrakube-3.10.1.tgz:templates/service-ui.yaml",
      "Class": "config",
      "Type": "helm",
      "MisconfSummary": {
        "Successes": 151,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Helm Security Check",
          "ID": "KSV116",
          "AVDID": "AVD-KSV-0116",
          "Title": "Runs with a root primary or supplementary GID",
          "Description": "According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.",
          "Message": "service terrakube-ui-service in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0",
          "Namespace": "builtin.kubernetes.KSV116",
          "Query": "data.builtin.kubernetes.KSV116.deny",
          "Resolution": "Set 'containers[].securityContext.runAsGroup' to a non-zero integer or leave undefined.",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/ksv116",
          "References": [
            "https://kubesec.io/basics/containers-securitycontext-runasuser/",
            "https://avd.aquasec.com/misconfig/ksv116"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Provider": "Kubernetes",
            "Service": "general",
            "Code": {
              "Lines": null
            }
          }
        }
      ]
    }
  ]
}
